'use strict';
import readConfigFile from './readConfigFile.js';
export const errors = {
    notAdd(file, row) {
        var _a, _b;
        return `DaJ; ${((_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.IS_DEVELOPMENT) !== null && _b !== void 0 ? _b : false) && `${file}, row?: ${row}`} Error: Data not added`;
    },
    userNotExist(file, row) {
        var _a, _b;
        return `DaJ; ${((_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.IS_DEVELOPMENT) !== null && _b !== void 0 ? _b : false) && `${file}, row?: ${row}`} Error: User no exist.`;
    },
    notData(file, row) {
        var _a, _b;
        return `DaJ; ${((_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.IS_DEVELOPMENT) !== null && _b !== void 0 ? _b : false) && `${file}, row?: ${row}`} Error: No data found`;
    },
    keyNotFound(file, row) {
        var _a, _b;
        return `DaJ; ${((_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.IS_DEVELOPMENT) !== null && _b !== void 0 ? _b : false) && `${file}, row?: ${row}`} Error: 'key' is not found.`;
    },
    notDataAccess(file, row) {
        var _a, _b;
        return `DaJ; ${((_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.IS_DEVELOPMENT) !== null && _b !== void 0 ? _b : false) && `${file}, row?: ${row}`} Error: No access to data file.`;
    },
    arrayNot(file, row) {
        var _a, _b;
        return `DaJ; ${((_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.IS_DEVELOPMENT) !== null && _b !== void 0 ? _b : false) && `${file}, row?: ${row}`} Error: Arrays are not supported in a PUT operation.`;
    },
};
