var _a, _b, _c, _d;
import { /*encript,*/ desencript } from './locks.js';
import readConfigFile from './readConfigFile.js';
import { errors } from './errors.js';
import fs from 'fs';
//
const datafileName = (_b = (_a = readConfigFile()) === null || _a === void 0 ? void 0 : _a.DB_NAME) !== null && _b !== void 0 ? _b : 'datafile';
const isDebelopment = (_d = (_c = readConfigFile()) === null || _c === void 0 ? void 0 : _c.IS_DEVELOPMENT) !== null && _d !== void 0 ? _d : false;
const fullDataConfiFile = `./${datafileName}.daj.${isDebelopment ? 'json' : 'db'}`;
//
export default function readFileSync() {
    try {
        const data = fs.readFileSync(fullDataConfiFile);
        try {
            return { error: null, data: JSON.parse(desencript(data.toString())) };
        }
        catch (err) {
            return { error: errors.notData('readFileSync', 13), data: null };
        }
    }
    catch (err) {
        return { error: errors.notDataAccess('readFileSync', 18), data: null };
    }
}
